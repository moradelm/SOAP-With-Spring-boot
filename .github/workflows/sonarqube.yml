name: SonarQube Analysis

on:
  push:
    branches:
      - main  # Trigger the analysis on push to the main branch
  pull_request:
    branches:
      - main  # Trigger the analysis during a pull request to the main branch

jobs:
  sonar:
    name: SonarQube Scan
    runs-on: ubuntu-latest  # The job runs on an Ubuntu environment

    steps:
      # Step 1: Checkout the source code
      - uses: actions/checkout@v2
        name: Checkout code

      # Step 2: Set up Java (using JDK 17 here)
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'  # Set to Java 17 for your project
          distribution: 'adoptopenjdk'

      # Step 3: Cache SonarQube scanner dependencies (optional but recommended to speed up builds)
      - name: Cache SonarQube scanner
        uses: actions/cache@v2
        with:
          path: ~/.sonar
          key: "${{ runner.os }}-sonar-${{ hashFiles('**/*.java') }}"  # Cache based on project Java files

      # Step 4: Run SonarQube scanner
      - name: Run SonarQube scanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Fetch the SonarCloud token from GitHub Secrets
        run: |
          # Download and install SonarQube Scanner
          curl -sSLo sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip sonar-scanner-cli.zip
          export PATH=$PATH:$(pwd)/sonar-scanner-4.6.2.2472-linux/bin
          sonar-scanner -Dsonar.projectKey=mon-projet-springboot  # Replace with your project's SonarCloud projectKey
          sonar-scanner -Dsonar.login=${{ secrets.SONAR_TOKEN }}  # Authentication using the SonarCloud token
